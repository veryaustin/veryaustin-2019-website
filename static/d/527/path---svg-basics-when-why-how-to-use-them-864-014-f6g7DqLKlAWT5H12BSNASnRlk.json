{"data":{"markdownRemark":{"html":"<p>Over the past several years, there has been an explosion of the variety of size of screen that people use to access the web. Additionally, you may not know that there has been a shift in the pixel density of those devices to ones with increasingly more pixels per square inch. If you are in the Apple hardware camp, they like to call these 'Retina' displays since, they have such high resolution screens that the eye cannot discern pixels at a normal operating distance.</p>\n<p>Traditionally screens have included about 72 pixels per square inch (ppi). Newer screens usually have a pixel density of around 300ppi. This is great for the end user because it allows the device to render the content with much more clarity. If we don't display an image with high enough resolution, it will show up as blurry. If we display an image with high resolution on a small screen, we make the site load slow and waste a lot of bandwidth.</p>\n<p>SVG's are composed of vectors and not pixels. A vector is a point in empty space with and x &#x26; y coordinate. If you connect them together you can create shapes. They are infinitely scalable.</p>\n<p>If a file needs a large variant from pixel to it's neighboring pixels, it won't benefit from being a vector. It would actually take up more space than a rasterized file.</p>\n<p>Rule of thumb: If are using a photograph, you should almost always use a rasterized image. If it's more graphical (logo), map, chart that doesn't need extreme amounts of color detail, an SVG is optimal</p>\n<p>If you have ever tried to enlarge a digital photograph, you have probably seen that they are composed tiny squares called pixels.</p>\n<hr>\n<p>SVG is actually an XML markup language.</p>\n<p>SVG Elements: <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element\">https://developer.mozilla.org/en-US/docs/Web/SVG/Element</a>\nSVG Attributes: <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\">https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute</a></p>\n<p>SVGGO Optimizer: <a href=\"https://github.com/svg/svgo-gui\">https://github.com/svg/svgo-gui</a></p>\n<hr>\n<p>Modifying SVG with CSS\nYou must embed the svg into the HTML. This is good because it reduces the number of http requests and load faster. Unfortunately the browser can't cache it like other image assets so on subsequent page loads, you will have to make an additional http request to load it.\n-can apply classes to embedded elements <svg class=\"example\"></p>\n<p>If you embed an svg into your html, it's possible to use css styles &#x26; media queries to modify the svg based on resolution. When an svg is at a small size, you can show less detail so it looks more like an icon.</p>","frontmatter":{"title":"Back To Basics: When, Why & How To Use SVG's"}}},"pageContext":{"slug":"/svg-basics-when-why-how-to-use-them/"}}